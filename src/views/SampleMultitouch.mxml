<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" viewActivate="view1_viewActivateHandler(event)"
		xmlns:s="library://ns.adobe.com/flex/spark" title="Multitouch">
	
	<fx:Declarations>
		<fx:Component className="Circle">
			<s:Ellipse width="120" height="120">
				<s:fill>
					<s:SolidColor color="haloBlue"/>
				</s:fill>
			</s:Ellipse>
		</fx:Component>
	</fx:Declarations>	
	
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			
			import spark.components.supportClasses.StyleableTextField;
			import spark.events.ViewNavigatorEvent;
			
			protected var circles:Object = new Object();
			
			protected function view1_viewActivateHandler(event:ViewNavigatorEvent):void
			{    
				if (!Multitouch.supportsTouchEvents)
					currentState = "unsupported";
				else 
				{
					currentState = "normal";
					Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;
					log.appendText("Max touch points supported: " + Multitouch.maxTouchPoints +"\n");
					this.stage.addEventListener(TouchEvent.TOUCH_BEGIN,onTouchBegin);
					this.stage.addEventListener(TouchEvent.TOUCH_END,onTouchEnd);
					this.stage.addEventListener(TouchEvent.TOUCH_MOVE,onTouchMove); 
					this.stage.addEventListener(TouchEvent.TOUCH_OUT,onTouchOut);
					this.stage.addEventListener(TouchEvent.TOUCH_OVER,onTouchOver);
					this.stage.addEventListener(TouchEvent.TOUCH_ROLL_OUT,onTouchRollOut);
					this.stage.addEventListener(TouchEvent.TOUCH_ROLL_OVER,onTouchRollOver);
					this.stage.addEventListener(TouchEvent.TOUCH_TAP,onTouchTap);
				}
			}
			
			protected function onTouchBegin(event:TouchEvent):void
			{
				log.appendText("Touch Begin\n");
				var c:Circle = new Circle();
				c.x = event.localX - 70;
				c.y = event.localY - 70;
				pnl.addElement(c);
				circles[event.touchPointID] = c;
			}
			
			protected function onTouchEnd(event:TouchEvent):void
			{
				log.appendText("Touch End\n");
				if (circles[event.touchPointID] != null)
				{
					pnl.removeElement(circles[event.touchPointID]);
					delete circles[event.touchPointID];
				}
				else
				{
					log.appendText("couldn't find " + event.touchPointID);
					StyleableTextField(log.textDisplay).scrollV = StyleableTextField(log.textDisplay).scrollV+1;
				}
			}
			
			protected function onTouchMove(event:TouchEvent):void
			{
				log.appendText("Touch Move\n ");
				StyleableTextField(log.textDisplay).scrollV = StyleableTextField(log.textDisplay).scrollV+1;
				if (circles[event.touchPointID] != null)
				{
					circles[event.touchPointID].x = event.localX - 70;
					circles[event.touchPointID].y = event.localY - 70;
				}
				else
				{
					log.appendText("couldn't find " + event.touchPointID);
					StyleableTextField(log.textDisplay).scrollV = StyleableTextField(log.textDisplay).scrollV+1;
				}
			}
			
			protected function onTouchOut(event:TouchEvent):void
			{
				log.appendText("Touch Out\n");
				StyleableTextField(log.textDisplay).scrollV = StyleableTextField(log.textDisplay).scrollV+1;
			}
			
			protected function onTouchOver(event:TouchEvent):void
			{
				log.appendText("Touch Over\n");
				StyleableTextField(log.textDisplay).scrollV = StyleableTextField(log.textDisplay).scrollV+1;
			}
			
			protected function onTouchRollOut(event:TouchEvent):void
			{
				log.appendText("Touch Roll Out\n");
				StyleableTextField(log.textDisplay).scrollV = StyleableTextField(log.textDisplay).scrollV+1;
			}
			
			protected function onTouchRollOver(event:TouchEvent):void
			{
				log.appendText("Touch Roll Over\n");	
				StyleableTextField(log.textDisplay).scrollV = StyleableTextField(log.textDisplay).scrollV+1;
			}
			
			protected function onTouchTap(event:TouchEvent):void
			{
				log.appendText("Touch Tap\n");	
				StyleableTextField(log.textDisplay).scrollV = StyleableTextField(log.textDisplay).scrollV+1;
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="unsupported"/>
	</s:states>
	
	<s:layout>
		<s:VerticalLayout paddingTop="8" paddingBottom="5" paddingLeft="5" paddingRight="5" gap="3" 
						  horizontalAlign="center" verticalAlign="bottom"/>
	</s:layout>
	<s:Label text="This device does not support multitouch." includeIn="unsupported"/>
	
	<s:Panel id="pnl" height="100%" width="98%" title="Touch Panel" includeIn="normal">
		
		<s:TextArea width="95%" editable="false" horizontalCenter="0" top="8"
					text="Touch the screen to see a circle show up at the location where the touch event was received."/>
		
		
	</s:Panel>
	<s:VGroup width="80%" horizontalAlign="center">
		<s:Label text="Event Log:"/>
		<s:TextArea id="log" editable="false" height="50" enabled="false"/>
		<s:Button label="Clear log" click="log.text=''"/>
	</s:VGroup>	
</s:View>
